name: Maven Build and Docker Push

on:
    push:
        branches:
            - master

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                image: [pangu-gateway, pangu-auth, pangu-system, pangu-manager, pangu-data, pangu-driver-modbus-tcp, pangu-driver-jemetech, pangu-driver-etone-ap]

        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: Cache Maven dependencies
              uses: actions/cache@v2
              with:
                  path: ~/.m2/repository
                  key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                  restore-keys: |
                      ${{ runner.os }}-maven-

            - name: Set up JDK 8
              uses: actions/setup-java@v2
              with:
                  java-version: '8'
                  distribution: 'adopt'

            - name: Get version from pom.xml
              id: version
              run: echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

            - name: Build with Maven And Build Docker Images
              run: |
                  docker build --target build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image }}:build -f ${matrix.image}/Dockerfile .
                  docker build --target deploy -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image }}:latest -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image }}:${{ steps.version.outputs.version }} -f ${matrix.image}/Dockerfile .

            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Push Docker images to Docker Hub
              run: |
                  docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image }}
